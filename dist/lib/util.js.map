{"version":3,"sources":["../../src/lib/util.js"],"names":["winston","require","DailyRotateFile","logger","createLogger","level","transports","filename","dirname","cfg","logDir","datePattern","logRotateDateFormat","handleExceptions","humanReadableUnhandledException","json","colorize","Console","promise","util","m","momentTZ","unDefined","val","mongoose","promisifyAll","_","routerInstance","Router","baseController","modelFactory","baseService"],"mappings":"AAAA;;;;;;AAEA;;;;;;AAEA,IAAMA,UAAUC,QAAQ,SAAR,CAAhB;AACA,IAAMC,kBAAkBD,QAAQ,2BAAR,CAAxB;;AAEA,IAAME,SAASH,QAAQI,YAAR,CAAqB;AAChCC,WAAO,MADyB;AAEhCC,gBAAY,CAAC,IAAIJ,eAAJ,CAAoB;AACzBG,eAAO,MADkB;AAEzBE,kBAAU,OAFe;AAGzBC,iBAASC,iBAAIC,MAHY;AAIzBC,qBAAaF,iBAAIG,mBAAJ,GAA0B,MAJd;AAKzBC,0BAAkB,IALO;AAMzBC,yCAAiC,IANR;AAOzBC,cAAM,KAPmB;AAQzB;AACA;AACAC,kBAAU;AAVe,KAApB,CAAD,EAYR,IAAIhB,QAAQM,UAAR,CAAmBW,OAAvB,CAA+B;AAC3BZ,eAAO,OADoB;AAE3B;AACAU,cAAM,KAHqB;AAI3BC,kBAAU;AAJiB,KAA/B,CAZQ;AAFoB,CAArB,CAAf;;AAuBA,IAAME,UAAUjB,QAAQ,UAAR,CAAhB;AACA,IAAIkB,OAAO;AACPC,OAAGnB,QAAQ,QAAR,CADI;AAEPoB,cAAUpB,QAAQ,iBAAR,CAFH;AAGPiB,aAASA,OAHF;AAIPI,eAAW,mBAACC,GAAD,EAAS;AAAE,eAAQ,CAACA,GAAD,IAASA,OAAO,WAAxB;AAAwC,KAJvD;AAKPC,cAAUN,QAAQO,YAAR,CAAqBxB,QAAQ,UAAR,CAArB,CALH;AAMPyB,OAAGzB,QAAQ,QAAR,CANI;AAOP0B,oBAAgB,0BAAM;AAClB,eAAO,IAAI1B,OAAJ,CAAY,SAAZ,EAAuB2B,MAAvB,EAAP;AACH,KATM;AAUPnB,SAAKA,gBAVE;AAWPN,YAAQA,MAXD;AAYP0B,oBAAgB5B,QAAQ,kBAAR,CAZT;AAaP6B,kBAAc7B,QAAQ,gBAAR,CAbP;AAcP8B,iBAAa9B,QAAQ,eAAR;AAdN,CAAX;;kBAiBekB,I","file":"util.js","sourcesContent":["'use strict';\n\nimport cfg from '../config.json';\n\nconst winston = require('winston');\nconst DailyRotateFile = require('winston-daily-rotate-file');\n\nconst logger = winston.createLogger({\n    level: 'info',\n    transports: [new DailyRotateFile({\n            level: 'info',\n            filename: 'srvr-',\n            dirname: cfg.logDir,\n            datePattern: cfg.logRotateDateFormat + \".log\",\n            handleExceptions: true,\n            humanReadableUnhandledException: true,\n            json: false,\n            // maxsize: 5242880, //5MB\n            // maxFiles: 5,\n            colorize: false\n        }),\n        new winston.transports.Console({\n            level: 'debug',\n            // handleExceptions: true,\n            json: false,\n            colorize: true\n        })\n    ]\n});\n\nconst promise = require('bluebird');\nlet util = {\n    m: require('moment'),\n    momentTZ: require('moment-timezone'),\n    promise: promise,\n    unDefined: (val) => { return (!val || (val == 'undefined')); },\n    mongoose: promise.promisifyAll(require('mongoose')),\n    _: require('lodash'),\n    routerInstance: () => {\n        return new require('express').Router()\n    },\n    cfg: cfg,\n    logger: logger,\n    baseController: require('./basecontroller'),\n    modelFactory: require('./modelfactory'),\n    baseService: require('./baseservice')\n}\n\nexport default util;"]}